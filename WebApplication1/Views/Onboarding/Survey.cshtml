@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Đánh giá Trình độ Ngôn ngữ</title>
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body {
            background-color: #ffffff;
            display: flex;
            min-height: 100vh; /* Đảm bảo body chiếm toàn bộ chiều cao màn hình */
            flex-direction: column;
        }

        .header-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 80px;
            background-color: #ffffff;
            z-index: 1000;
            display: flex;
            align-items: center;
        }

        .progress-container {
            width: 60%;
            height: 15px;
        }

        .progress-bar {
            transition: width 0.5s ease-in-out;
            background-color: #58A700;
        }

        .question-fixed {
            position: fixed;
            top: 90px;
            width: 80%;
            background-color: white; /* Đảm bảo không trong suốt */
            font-size: 20px; /* Thu nhỏ font để tránh chiếm nhiều không gian */
            text-align: center;
            z-index: 1000; /* Đảm bảo nằm trên danh sách lựa chọn */
        }



        .slide-container {
            margin-top: 200px; /* Tăng khoảng cách để tránh chồng lấp với question-fixed */
            height: calc(100vh - 350px); /* Điều chỉnh chiều cao để vừa màn hình */
            overflow-y: auto;
            width: 60%; /* Đặt chiều rộng là 70% */
            margin-left: auto; /* Căn giữa */
            margin-right: auto; /* Căn giữa */
            overflow-y: scroll;
            scrollbar-width: none; /* Firefox */
        }
            .slide-container::-webkit-scrollbar {
                display: none; /* Chrome, Safari */
            }
        .slide-content {
            display: flex;
            transition: transform 0.5s ease-in-out;
        }

        .slide-item {
            min-width: 100%;
            flex-shrink: 0;
        }

        .hidden {
            display: none;
        }

        .option-btn:hover {
            background-color: #f0f0f0;
        }

        .footer-btn {
            position: fixed; /* Cố định vị trí */
            bottom: 0; /* Đặt ở đáy màn hình */
            left: 30%;
            height: 130px;
            width: 100%; /* Trải rộng toàn bộ chiều ngang */
            background-color: white; /* Đảm bảo có nền để không bị chìm vào nội dung */
            display: flex;
            z-index: 1000; /* Giữ trên tất cả nội dung khác */
        }

        .horizontal {
            width: 100%;
            height: 1px;
            background-color: #CECECE;
            position: absolute;
            left: 0;
        }

        .btn-success {
            background-color: #58CC02 !important;
            border: none !important;
            border-bottom: 4px solid #58A700 !important;
            color: white !important; /* Đảm bảo chữ màu trắng */
            font-weight: bold;
            padding: 12px 30px;
            border-radius: 8px;
            transition: all 0.3s ease-in-out;
        }

            .btn-success:hover {
                background-color: #58A700 !important;
                border-bottom-color: #4D9100 !important; /* Làm tối màu viền khi hover */
                transform: translateY(-2px); /* Hiệu ứng nhấn */
            }

        .option-btn {
            background-color: white !important; /* Màu nền */
            color: #4B4B4B !important; /* Màu chữ */
            border: 1px solid #E5E5E5 !important; /* Viền 1px */
            border-radius: 8px; /* Bo tròn góc */
            font-size: 16px;
            font-weight: bold;
            border-bottom: 4px solid #E5E5E5 !important;
            transition: all 0.3s ease-in-out;
        }

            .option-btn:hover {
                background-color: #F7F7F7 !important; /* Màu hover */
                transform: translateY(-2px);
            }

            .option-btn:active {
                background-color: #DDF4FF !important;
            }

            .option-btn.active {
                background-color: #DDF4FF !important;
                color: #1899D6 !important;
                border-bottom: 4px solid #84D8FF !important;
            }

    </style>
</head>
<body>

    <div>
        <!-- Fixed Header -->
        <div class="header-container container-fluid">
            <div class="d-flex align-items-center justify-content-center w-100 gap-3">
                <button class="btn btn-back" onclick="goBack()">
                    <i class="fa-solid fa-chevron-left"></i>
                </button>
                <div class="progress progress-container">
                    <div id="progress-bar" class="progress-bar" role="progressbar"
                         style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                    </div>
                </div>
            </div>
        </div>

        <!-- Fixed Question Section -->
        <div class="question-fixed">
            <img src="https://media.giphy.com/media/wH8aFVGkdmOjxBxR3I/giphy.gif"
                 alt="Owl" class="img-fluid" style="width: 148px; height: 100px;" />
            <div class="p-3 border border-1 rounded-3 d-inline-block">
                <p id="dynamicText" class="m-0">Bạn biết tới Duolingo từ đâu?</p>
            </div>

        </div>


        <!-- Scrollable Question Section -->
        <div class="container slide-container">
            <div class="slide-content" id="slideContent">
                <!-- Câu hỏi 1 -->
                <div class="slide-item" data-question-id="0">
                    @{
                        var levels = new[] {
            new { Text = "Bạn bè/gia đình", Image = "~/Assets/Client/clientAssets/img/friends.png" },
            new { Text = "TikTok", Image = "~/Assets/Client/clientAssets/img/tiktok.png" },
            new { Text = "Tìm kiếm Google", Image = "~/Assets/Client/clientAssets/img/google.png" },
            new { Text = "Fackbook/Instagram", Image = "~/Assets/Client/clientAssets/img/facebook.png" },
            new { Text = "TV", Image = "~/Assets/Client/clientAssets/img/tv.png" },
            new { Text = "YouTube", Image = "~/Assets/Client/clientAssets/img/youtube.png" },
            new { Text = "Tin tức/báo chí/blog", Image = "~/Assets/Client/clientAssets/img/news.png" },
            new { Text = "Khác", Image = "~/Assets/Client/clientAssets/img/tata.png" },
        };
                    }
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6">
                                @for (int i = 0; i < 4; i++)
                                {
                                    <button type="button" class="btn w-100 d-flex align-items-center p-3 mb-4  bg-white border rounded-3 shadow-sm option-btn"
                                            onclick="selectOption(this, '@levels[i].Text')">
                                        <img src="@Url.Content(levels[i].Image)" alt="Level icon" class="me-3" style="width: 35px; height: 35px;" />
                                        <span class="fs-5 mb-0 text-start">@levels[i].Text</span>
                                    </button>
                                }
                            </div>
                            <div class="col-md-6">
                                @for (int i = 4; i < 8; i++)
                                {
                                    <button type="button" class="btn w-100 d-flex align-items-center p-3 mb-4 bg-white border rounded-3 shadow-sm option-btn"
                                            onclick="selectOption(this, '@levels[i].Text')">
                                        <img src="@Url.Content(levels[i].Image)" alt="Level icon" class="me-3" style="width: 35px; height: 35px;" />
                                        <span class="fs-5 mb-0 text-start">@levels[i].Text</span>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Câu hỏi 2 -->
                <div class="slide-item hidden" data-question-id="1">
                    @{
                        var nextLevels1 = new[] {
    new { Text = "Chuẩn bị đi du lịch", Image = "~/Assets/Client/clientAssets/img/fly.png" },
    new { Text = "Kết nối với mọi người", Image = "~/Assets/Client/clientAssets/img/friends.png" },
    new { Text = "Giải trí", Image = "~/Assets/Client/clientAssets/img/tata.png" },
    new { Text = "Khác", Image = "~/Assets/Client/clientAssets/img/facebook.png" },
    new { Text = "Hỗ trợ việc học tập", Image = "~/Assets/Client/clientAssets/img/book.png" },
    new { Text = "Phát triển sự nghiệp", Image = "~/Assets/Client/clientAssets/img/bag.png" },
    new { Text = "Sử dụng thời gian hiệu quả", Image = "~/Assets/Client/clientAssets/img/brain.png" },
    new { Text = "Lấy chồng đại gia", Image = "~/Assets/Client/clientAssets/img/tata.png" },
};
                    }
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6">
                                @for (int i = 0; i < 4; i++)
                                {
                                    <button type="button" class="btn w-100 d-flex align-items-center p-3 mb-4 bg-white border rounded-3 shadow-sm option-btn"
                                            onclick="selectOption(this, '@nextLevels1[i].Text')">
                                        <img src="@Url.Content(nextLevels1[i].Image)" alt="Level icon" class="me-3" style="width: 35px; height: 35px;" />
                                        <span class="fs-5 mb-0 text-start">@nextLevels1[i].Text</span>
                                    </button>
                                }
                            </div>
                            <div class="col-md-6">
                                @for (int i = 4; i < 8; i++)
                                {
                                    <button type="button" class="btn w-100 d-flex align-items-center p-3 mb-4 bg-white border rounded-3 shadow-sm option-btn"
                                            onclick="selectOption(this, '@nextLevels1[i].Text')">
                                        <img src="@Url.Content(nextLevels1[i].Image)" alt="Level icon" class="me-3" style="width: 35px; height: 35px;" />
                                        <span class="fs-5 mb-0 text-start">@nextLevels1[i].Text</span>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Câu hỏi 3 -->
                <div class="slide-item hidden" data-question-id="2">
                    @{
                        var nextLevels2 = new[] {
                        new { Text = "Tôi mới học Tiếng Anh", Image = "~/Assets/Client/clientAssets/img/level1.png" },
                        new { Text = "Tội biết một vài từ thông dụng", Image = "~/Assets/Client/clientAssets/img/level2.png" },
                        new { Text = "Tôi có thể giao tiếp cơ bản", Image = "~/Assets/Client/clientAssets/img/level3.png" },
                        new { Text = "Tôi có thể nói về nhiều chủ đề", Image = "~/Assets/Client/clientAssets/img/level4.png" }
                    };
                    }
                    @foreach (var level in nextLevels2)
                    {
                        <button type="button" class="btn w-100 d-flex align-items-center p-3 mb-3 bg-white border rounded-3 shadow-sm option-btn"
                                onclick="selectOption(this, '@level.Text')">
                            <img src="@Url.Content(level.Image)" alt="Level icon" class="me-3" style="width: 35px; height: 35px;" />
                            <span class="fs-5 mb-0 text-start">@level.Text</span>
                        </button>
                    }
                </div>

                <!-- Câu hỏi 4 -->
                <div class="slide-item hidden" data-question-id="3">
                    @{
                        var nextLevels3 = new[] {
                        new { Text = "Không bao giờ", Image = "~/Assets/Client/clientAssets/img/us.png" },
                        new { Text = "Hiếm khi", Image = "~/Assets/Client/clientAssets/img/us.png" },
                        new { Text = "Thỉnh thoảng", Image = "~/Assets/Client/clientAssets/img/us.png" },
                        new { Text = "Thường xuyên", Image = "~/Assets/Client/clientAssets/img/us.png" }
                    };
                    }
                    @foreach (var level in nextLevels3)
                    {
                        <button type="button" class="btn w-100 d-flex align-items-center p-3 mb-3 bg-white border rounded-3 shadow-sm option-btn"
                                onclick="selectOption(this, '@level.Text')">
                            <img src="@Url.Content(level.Image)" alt="Level icon" class="me-3" style="width: 35px; height: 35px;" />
                            <span class="fs-5 mb-0 text-start">@level.Text</span>
                        </button>
                    }
                </div>

                <!-- Câu hỏi 5 -->
                <div class="slide-item hidden" data-question-id="4">
                    <div class="bg-white shadow-lg p-4 rounded w-50" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1000;">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="fw-bold text-dark">www.duolingo.com muốn</span>
                            <button class="btn-close" onclick="closePopup()"></button>
                        </div>
                        <div class="d-flex align-items-center mb-3">
                            <i class="fas fa-bell text-secondary me-2"></i>
                            <span class="text-dark">Hiện thông báo</span>
                        </div>
                        <div class="d-flex justify-content-end gap-2">
                            <button class="btn btn-outline-secondary" onclick="showNotification('block')">CHẶN</button>
                            <button class="btn btn-primary" onclick="showNotification('allow')">CHO PHÉP</button>
                        </div>
                    </div>
                </div>

             

            </div>


        </div>
        <div class="horizontal"></div>
        <div class="footer-btn d-flex justify-content-center align-items-center mt-4">
            <button id="btn-tiep-tuc" class="btn btn-secondary" onclick="slideNext()" disabled style="width:165px;height:50px;font-size:15px;font-weight:bold">TIẾP TỤC</button>
        </div>

    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let selectedOption = null;
        let currentSlide = 0;
        const slides = document.querySelectorAll('.slide-item');
        const nextButton = document.getElementById('btn-tiep-tuc');
        const dynamicText = document.getElementById('dynamicText');
        const totalSlides = slides.length;
        const step = 100 / (totalSlides - 1);

        const questions = [
            "Bạn biết tới Duolingo từ đâu?",
            "Tại sao bạn học Tiếng Anh?",
            "Trình độ Tiếng Anh của bạn ở mức nào?",
            "Bạn sẽ dành bao nhiêu thời gian để học mỗi ngày?",
            "Tớ sẽ nhắc bạn để việc học trở thành thói quen",
        
        ];

        function updateProgress(value) {
            const progressBar = document.getElementById('progress-bar');
            if (progressBar) {
                if (value > 100) value = 100;
                if (value < 0) value = 0;
                progressBar.style.width = `${value}%`;
                progressBar.setAttribute('aria-valuenow', value);
            }
        }

        function selectOption(element, text) {
            if (selectedOption) {
                selectedOption.classList.remove('btn-primary');
                selectedOption.classList.add('bg-white', 'border');
                selectedOption.style.color = '#000000';
            }
            element.classList.remove('bg-white', 'border');
            element.classList.add('btn-primary');
            element.style.color = '#ffffff';
            selectedOption = element;
            nextButton.classList.remove('btn-secondary');
            nextButton.classList.add('btn-success');
            nextButton.disabled = false;
        }

        function slideNext() {
            if (selectedOption && currentSlide < totalSlides - 1) {
                slides[currentSlide].classList.add('hidden');
                currentSlide++;
                slides[currentSlide].classList.remove('hidden');
                updateProgress(currentSlide * step);
                dynamicText.textContent = questions[currentSlide];
                if (selectedOption) {
                    selectedOption.classList.remove('btn-primary');
                    selectedOption.classList.add('bg-white', 'border');
                    selectedOption.style.color = '#000000';
                    selectedOption = null;
                }
                nextButton.classList.remove('btn-success');
                nextButton.classList.add('btn-secondary');
                nextButton.disabled = true;
            }
            if (currentSlide === totalSlides - 1) {
                nextButton.textContent = "HOÀN THÀNH";
                nextButton.classList.add('btn-primary');
                // Thay alert bằng chuyển hướng về trang chủ
                nextButton.onclick = function () {
                    window.location.href = "/Account/Register"; // Chuyển hướng về trang chủ
                };
            }
        }
        function goBack() {
            if (currentSlide > 0) {
                slides[currentSlide].classList.add('hidden');
                currentSlide--;
                slides[currentSlide].classList.remove('hidden');
                updateProgress(currentSlide * step);
                dynamicText.textContent = questions[currentSlide];
                if (selectedOption) {
                    selectedOption.classList.remove('btn-primary');
                    selectedOption.classList.add('bg-white', 'border');
                    selectedOption.style.color = '#000000';
                    selectedOption = null;
                }
                nextButton.classList.remove('btn-success');
                nextButton.classList.add('btn-secondary');
                nextButton.disabled = true;
                nextButton.textContent = "TIẾP TỤC";
                nextButton.onclick = slideNext;
            }
        }
        document.querySelectorAll('.option-btn').forEach(button => {
            button.addEventListener('click', function () {
                // Bỏ class 'active' khỏi tất cả các nút trước đó
                document.querySelectorAll('.option-btn').forEach(btn => btn.classList.remove('active'));

                // Thêm class 'active' vào nút được click
                this.classList.add('active');
            });
        });

        updateProgress(0);
       
        function showNotification(action) {
            const nextButton = document.getElementById('btn-tiep-tuc'); // Lấy nút TIẾP TỤC

            if (!("Notification" in window)) {
                alert("Trình duyệt của bạn không hỗ trợ thông báo!");
                return;
            }

            if (action === "allow") {
                Notification.requestPermission().then(permission => {
                    if (permission === "granted") {
                        new Notification("Cảm ơn bạn đã cho phép thông báo!");
                        localStorage.setItem("notificationPermission", "granted");
                        // Kích hoạt nút TIẾP TỤC
                        nextButton.classList.remove('btn-secondary');
                        nextButton.classList.add('btn-success');
                        nextButton.disabled = false;
                    }
                });
            } else if (action === "block") {
                alert("Bạn đã chặn thông báo!");
                localStorage.setItem("notificationPermission", "denied");
                // Kích hoạt nút TIẾP TỤC
                nextButton.classList.remove('btn-secondary');
                nextButton.classList.add('btn-success');
                nextButton.disabled = false;
            }
        }
    </script>
</body>
</html>