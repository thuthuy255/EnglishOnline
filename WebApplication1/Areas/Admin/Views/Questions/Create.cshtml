@model Model.EF.Questions

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@{
    var topics = ViewBag.listTopic as List<Model.EF.Topic>;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body class="bg-light">
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <div class="d-flex justify-content-center align-items-center mt-5">
        <div class="col-md-8 bg-white p-5 rounded shadow vh-10">
            <h2 class="text-center">Thêm Câu Hỏi</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label for="TopicID" class="control-label col-md-2">Chủ đề</label>
                        <div class="mb-3">
                            <select id="TopicID" name="TopicID" class="form-control">
                                <option value="">-- Chọn chủ đề --</option>
                                @foreach (var topic in topics)
                                {
                                    <option value="@topic.TopicID">@topic.TopicName</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LessonID, "Bài học", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="mb-3">
                            @Html.DropDownList("LessonID", ViewBag.LessonID as SelectList, "-- Chọn bài học --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LessonID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="mb-3">
                            @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuestionType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="mb-3">
                            @Html.EditorFor(model => model.QuestionType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.QuestionType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="text-center">
                        <input type="submit" value="Create" class="btn btn-primary btn-lg mt-3" />
                    </div>
                </div>
            }
            <script>
                $(document).ready(function () {
                    $("#TopicID").change(function () {
                        var topicId = $(this).val();
                        console.log("Selected topicId:", topicId);
                        if (topicId) {
                            $.ajax({
                                url: '/Admin/Questions/GetLessonByTopicID',
                                type: 'GET',
                                data: { TopicID: topicId },
                                success: function (data) {
                                    var lessonSelect = $("#LessonID");
                                    lessonSelect.empty();
                                    lessonSelect.append($('<option>', {
                                        value: '',
                                        text: '-- Chọn bài học --'
                                    }));

                                    $.each(data, function (i, lesson) {
                                        lessonSelect.append($('<option>', {
                                            value: lesson.LessonID,
                                            text: lesson.LessonName
                                        }));
                                    });
                                },
                                error: function () {
                                    alert("Lỗi khi tải danh sách bài học.");
                                }
                            });
                        } else {
                            $("#LessonID").empty();
                            $("#LessonID").append($('<option>', {
                                value: '',
                                text: '-- Chọn bài học --'
                            }));
                        }
                    });
                });
            </script>


</body>
</html>
