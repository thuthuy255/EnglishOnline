@model Model.EF.UserProgress

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body class="bg-light">
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <div class="d-flex justify-content-center align-items-center mt-5">
        <div class="col-md-8 bg-white p-5 rounded shadow vh-10">
            <h2 class="text-center">Thêm Bài Học</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserID, "Tên người dùng", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="mb-3">
                            @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LessonID, "Tên bài học ", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="mb-3">
                            @Html.DropDownList("LessonID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LessonID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Score, "Điểm", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="mb-3">
                            @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="d-flex justify-content-between">
                            @Html.LabelFor(model => model.Completed, "Trạng thái", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(model => model.Completed, true, new { @class = "form-check-input", id = "completedTrue" })
                                <label class="form-check-label" for="completedTrue">Hoàn thành</label>
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(model => model.Completed, false, new { @class = "form-check-input", id = "completedFalse" })
                                <label class="form-check-label" for="completedFalse">Chưa hoàn thành</label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger mt-1 d-block" })
                        </div>
                    </div>



                    <div class="text-center">
                        <input type="submit" value="Create" class="btn btn-primary btn-lg mt-3" />
                    </div>
                </div>
            }
</body>
</html>
